{"pageProps":{"projectName":"OYM Data Plattform","currentAdr":{"slug":"20211109-eventhub-as-the-event-broker","package":null,"title":"Use Azure Event Hub as the Event Broker","status":"accepted","supersededBy":null,"tags":["event-broker"],"deciders":["Lukas Meyer","Benny Dinkel","Pascal Moser","Stefan Koch","Marco Amhof","Guido Schmutz"],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nWe want to use an Event Broker to get capabilities for passing events/messages using a publish/subscribe pattern. The Event Broker should be as cloud-agnostic as possible and needs to be linked with the IoT Hub solution provided by the gvien cloud provider. \n\n## Decision Drivers <!-- optional -->\n\n- how cloud-agostic is the Event Broker solution?\n- how long can the data be kept in the Event Broker? Is there a data rentention after it has been consumed?\n- how interoperable is the Event Broker solution? what programming languages can work with it?\n- how mature is the solution?\n- is it following a industry standard?\n- is Kafka as the de-facto standard for Event Borkers supported?\n- is it an open source solution?\n- how scalable is the Event Broker solution?\n- how does it integrate with the streaming and bigdata ecosystem?\n- in which Azure region is the service availble\n\n## Considered Options\n\n- Option 1: [Apache Kafka](http://kafka.apache.org)\n- Option 2: [Confluent Cloud](https://www.confluent.io/confluent-cloud)\n- Option 3: [Azure HDInsight Kafka](https://azure.microsoft.com/de-de/services/hdinsight/#overview)\n- Option 4: [Azure Event Hub](https://azure.microsoft.com/en-us/services/event-hubs/)\n- Option 5: [Azure IoT Hub](https://azure.microsoft.com/en-us/services/iot-hub/)\n\n## Decision Outcome\n\nChosen option: **Option 4: Azure Event Hub**, because \n\n### Positive Consequences <!-- optional -->\n\n- it offers a managed service with a true pay-for-use model\n- it is truely scalable in a serverless manner\n- it supports a configurable data retention (depending on the service used)\n- it integrates very well with the Azure streaming and big data ecosystem\n- it offers a Kafka compliant API\n- it offers with Azure Capture and easy way to integrate with Azure Data Lake Storage Gen2\n- it offers an integrated Schema Registry\n\n### Negative Consequences <!-- optional -->\n\n- it is not cloud-agnostic and it is not available on-premises\n- less know how/experience available than with a true Kafka\n- it is not availabe as Open Source Software\n- it is not fully compatible with Apache Kafka and therefore some design patterns of Kafka will not be usable (all around Log compacted topics) as well as some Kafka ecosystem solutions (ksqlDB, Kafka Streams, Confluent Schema Registry)\n\n## Pros and Cons of the Options <!-- optional -->\n\n### Option 1: Apache Kafka\n\nUse the [Apache Kafka](http://kafka.apache.org) open source software to self-managed a Kafka Cluster on Azure infrastructure, such as virtual machines or container services (Azure Kubernetes). \n\n- Good, because it is a true Kafka cluster\n- Good, because we can run the same infrastruture on-prem as well if needed\n- Good, because it integrates with a lot of software which supports Apache Kafka (ksqlDB, Kafka Streams, Kafka Connect)\n- Good, because it is scalable\n- Bad, because it is not a managed service\n- Bad, because no serverless option avaialble\n- Bad, because it has a high upfront cost (engineering efforts as well as cloud consumption)\n\n### Option 2: Confluent Cloud\n\nUse the [Confluent Cloud](https://www.confluent.io/confluent-cloud) managed service on Azure cloud. \n\n- Good, because it is a true Kafka cluster\n- Good, because it is a serverless, fully-managed Kafka service offered by Confluent (the people behind Apache Kafka)\n- Good, because it is scalable\n- Good, because it is cloud agnostic (could be run in AWS and Google Cloud)\n- Good, because it is based on an Open Source core (could run it on premises as well)\n- Good, because it integrates with a lot of software which supports Apache Kafka (ksqlDB, Kafka Streams, Kafka Connect)\n- Good, because it brings Kafka Connect (for integration), ksqlDB (for Stream Processing) and Schema Registry (for schema governance) as part of the managed service\n- Bad, because it is not as integrated with Azure as Azure Event Hub\n- Bad, because it is more expensive as Azure Event Hub\n- Bad, because it does not yet run in Azure Switzerland Region\n\n### Option 3: Azure HDInsight\n\nUse the [Azure HDInsight Kafka](https://azure.microsoft.com/de-de/services/hdinsight/#overview) as a managed Kafka service\n\n- Good, because it is a true Kafka cluster\n- Good, because it is scalable\n- Good, because it is based on an Open Source core (could run it on premises as well)\n- Good, because it integrates with a lot of software which supports Apache Kafka (ksqlDB, Kafka Streams, Kafka Connect)\n- Bad, because it runs on a Hadoop stack which is quite an outdated infrastructure\n- Bad, because it is not as integrated with Azure as Azure Event Hub\n- Bad, because it is much more expensive as Azure Event Hub (no serverless option available)\n- Bad, because it does not yet run in Azure Switzerland Region\n\n### Option 5: Azure Iot Hub\n\nUse the [Azure IoT Hub](https://azure.microsoft.com/en-us/services/iot-hub/) service, which is already in place for the IoT entrypoint, also for the Event Broker. \n\n- Good, because we could use the same Azure service for both external and internal messaging\n- Good, because it is a managed service with a true pay-for-use model\n- Good, because it is scalable in a serverless manner\n- Good, because is interoperable\n- Bad, because it is Azure proprietary and not cloud-agnostic\n- Bad, because it only offers limited data retention (over a period of 7 days)\n- Bad, because it does not integrate well into the streaming- and bigdata ecosystem\n- Bad, because it does not support the Event Hub capture functionality\n\n## Links <!-- optional -->\n\n- [Apache Kafka](http://kafka.apache.org)\n"},"creationDate":"2021-11-30T07:27:44.001Z","lastEditDate":"2021-11-30T07:27:44.001Z","lastEditAuthor":"Anonymous","publicationDate":"2021-11-09T23:59:59.000Z","file":{"relativePath":"docs/adr/20211109-eventhub-as-the-event-broker.md","absolutePath":"/opt/adr/docs/adr/20211109-eventhub-as-the-event-broker.md"}},"l4bVersion":"1.0.0-beta.11"},"__N_SSG":true}