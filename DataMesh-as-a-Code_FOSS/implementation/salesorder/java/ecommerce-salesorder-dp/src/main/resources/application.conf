 azkarra {
  context {
    // Create source topics before starting Kafka Streams.
    auto.create.topics.enable = false

    // Wait for source topics to be created before starting Kafka Streams.
    wait.for.topics.enable = false

    monitoring.streams.interceptor {
      // Enable the MonitoringStreamsInterceptor
      enable = false
      // The output topic for sending monitoring events
      topic = "_azkarra-streams-monitoring"
      // The period the interceptor should use to send a streams state event (in milliseconds)
      interval.ms = 10000

      info.enabled.stores.lag = true
    }
  }

  // Global configuration for all Kafka Streams instances
  streams {
    bootstrap.servers = "kafka-1:19092"
    default.key.serde = "org.apache.kafka.common.serialization.Serdes$StringSerde"
    default.value.serde = "io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde"
    schema.registry.url = "http://schema-registry-1:8081"   // "http://18.197.89.131:8081"
  }

  // Azkarra Metrics configs
  metrics {
    enable = true
    // Enable endpoint /prometheus
    endpoints.prometheus.enable = true
    // Enable JVM Metrics
    binders.jvm.enable = true
    // Enable KafkaStreams Metrics
    binders.kafkastreams.enable = true
  }

  topic {
    source = "public.ecommerce.shop.product-order-issued.event.v1"
  }

  // This property is used to automatically start all registered TopologyProvider classes.
  autostart { enable = true }

  // List of components to auto-registered into context;
  components = [ ]

  // List of environments to auto-registered into context;
  environments = [ ]

  // Azkarra Metrics configs
  metrics {
    enable = true
    // Enable endpoint /prometheus
    endpoints.prometheus.enable = true
    // Enable JVM Metrics
    binders.jvm.enable = true
    // Enable KafkaStreams Metrics
    binders.kafkastreams.enable = true
  }

  // Azkarra Server configs
  server {
    // Enable JAX-RS resources extensions
    rest.extensions.enable = true
    port = 8080
    headless = false
    webui.enable = true
    // These information will be exposes through the http endpoint GET /info
    info {
      app {
        name = "@project.name@"
        description = "@project.description@"
        version = "@project.version@"
        encoding = "@project.build.sourceEncoding@"
        java.version = "@java.version@"
      }
    }
  }
}